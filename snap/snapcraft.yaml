name: kubernetes-worker
base: core18
version: '0.0.1'
summary: A complete Kubernetes worker
description: |
  A fully functional Kubernetes worker in a snap.  This includes kubelet,
  kubectl, containerd and ctr.

grade: devel
confinement: strict

plugs:
  home:
    read: all
  docker-privileged:
    interface: docker-support
    privileged-containers: true
  k8s-kubelet:
    flavor: kubelet
    interface: kubernetes-support
  dot-kube:
    interface: personal-files
    write:
      - $HOME/.kube

slots:
  docker-daemon:
    interface: docker
  docker-executables:
    content: docker-executables
    interface: content
    read:
      - .

hooks:
  configure:
    plugs:
      - dot-kube
  remove:
    plugs:
      - network-control
      - k8s-kubelet

layout:
  /var/lib/dockershim:
    bind: $SNAP_DATA/lib/dockershim
  /sbin/ipset:
    bind: $SNAP/bin/ipset
  /usr/local/bin:
    bind: $SNAP/bin
  /var/lib/cni:
    bind: $SNAP_DATA/cni
  /var/lib/kubelet:
    bind: $SNAP_DATA/kubelet
  /var/lib/kube-proxy:
    bind: $SNAP_DATA/kube-proxy
  /etc/cni/net.d:
    bind: $SNAP_DATA/cni/net.d
  /var/log:
    bind: $SNAP_DATA/log

apps:
  dockerd:
    command: dockerd.wrapper
    daemon: simple
    plugs:
      - network-bind
      - firewall-control
      - docker-privileged
      - home
    slots:
      - docker-daemon
  kubelet:
    command: kubelet.wrapper
    daemon: simple
    plugs:
      - dot-kube
      - firewall-control
      - hardware-observe
      - k8s-kubelet
      - mount-observe
      - network-bind
      - network-control
      - process-control
      - system-observe
  kubectl:
    command: kubectl.wrapper
    plugs:
      - dot-kube
      - firewall-control
      - hardware-observe
      - home
      - k8s-kubelet
      - mount-observe
      - network-bind
      - network-control
      - process-control
      - system-observe

parts:
  setup:
    after:
      - artifacts
      - wrappers
    source: build/
    plugin: dump
  wrappers:
    source: wrappers/
    plugin: dump
    organize:
      dockerd.wrapper: bin/dockerd.wrapper
      ctr.wrapper: bin/ctr.wrapper
      kubectl.wrapper: bin/kubectl.wrapper
      kubelet.wrapper: bin/kubelet.wrapper
  artifacts:
    source: artifacts/
    plugin: dump
  runc:
    after:
      - setup
    plugin: nil
    build-snaps:
      - go/1.12/stable
    build-packages:
      - git
      - gcc
      - make
      - pkg-config
      - btrfs-tools
      - libseccomp-dev
    override-build: |
      set -eu
      . ../../../parts/setup/build/common.sh
      . ../../../parts/setup/build/lock.sh

      mkdir -p $SNAPCRAFT_PART_INSTALL/bin

      go get github.com/opencontainers/runc
      (
        cd $GOPATH/src/github.com/opencontainers/runc
        git checkout ${RUNC_COMMIT}
        make BUILDTAGS='seccomp apparmor'
      )
      cp $GOPATH/src/github.com/opencontainers/runc/runc $SNAPCRAFT_PART_INSTALL/bin/
    organize:
      go/src/github.com/opencontainers/runc/runc: bin/runc
      containerd/install/bin/*: bin/
    stage-packages:
      - libnss-myhostname
      - libnss-resolve
      - libnss-mymachines
      - conntrack
      - aufs-tools
      - gawk
      - sed
      - socat
      - grep
      - libssl1.0.0
      - coreutils
      - hostname
      - diffutils
    stage:
      - -sbin/xtables-multi
      - -sbin/iptables*
      - -lib/xtables
  docker:
    after:
      - setup
      - runc
    plugin: nil
    stage-snaps:
      - docker
    organize:
      go/src/github.com/containerd/containerd/bin/*: bin/
      containerd/install/bin/*: bin/
    stage-packages:
      - libnss-myhostname
      - libnss-resolve
      - libnss-mymachines
      - conntrack
      - aufs-tools
      - gawk
      - sed
      - socat
      - grep
      - libssl1.0.0
      - coreutils
      - hostname
      - diffutils
    stage:
      - -sbin/xtables-multi
      - -sbin/iptables*
      - -lib/xtables
  kubernetes:
    after:
      - setup
      - runc
      - docker
    plugin: nil
    build-snaps:
      - go/1.12/stable
    build-packages:
      - git
      - gcc
      - make
      - rsync
      - pkg-config
    stage-packages:
      - conntrack
      - ipset
    override-build: |
      set -eu
      . ../../../parts/setup/build/common.sh
      . ../../../parts/setup/build/lock.sh

      mkdir -p $SNAPCRAFT_PART_INSTALL/bin

      go get -d k8s.io/kubernetes || true
      (
        cd $GOPATH/src/k8s.io/kubernetes
        git checkout ${KUBERNETES_COMMIT}
        make all WHAT="cmd/kubelet cmd/kubectl cmd/kube-proxy"
      )
      cp $GOPATH/src/k8s.io/kubernetes/_output/local/go/bin/* $SNAPCRAFT_PART_INSTALL/bin/
  cni-plugins:
    after:
      - kubernetes
    plugin: nil
    build-snaps:
      - go/1.12/stable
    build-packages:
      - git
      - gcc
      - make
      - pkg-config
    override-build: |
      set -eu
      . ../../../parts/setup/build/common.sh
      . ../../../parts/setup/build/lock.sh

      mkdir -p $SNAPCRAFT_PART_INSTALL/bin/cni

      go get -d github.com/containernetworking/plugins || true
      (
        cd $GOPATH/src/github.com/containernetworking/plugins
        git checkout ${CNI_PLUGINS_COMMIT}
        ./build_linux.sh
      )
      cp $GOPATH/src/github.com/containernetworking/plugins/bin/* $SNAPCRAFT_PART_INSTALL/bin/cni/
